plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}
//queryDSL
//def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile
def generated = 'src/main/generated'
group = 'jwhs'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// spring security 관련
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	implementation 'org.springframework.boot:spring-boot-starter-webflux' // WebClient 지원
	implementation 'commons-codec:commons-codec:1.15'

	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// s3
	implementation("software.amazon.awssdk:s3:2.31.76")

}
// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(generated)
}


// java source Set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += "$projectDir/src/main/generated"
}

// build clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}


tasks.named('test') {
	useJUnitPlatform()
}


// plain JAR 생성 방지
tasks.named('jar') {
	enabled = false
}